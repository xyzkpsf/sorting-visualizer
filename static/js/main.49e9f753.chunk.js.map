{"version":3,"sources":["components/Topbar.jsx","components/Quicksort.jsx","components/BubbleSort.jsx","components/SelectionSort.jsx","components/InsertionSort.jsx","components/MergeSort.jsx","components/HeapSort.jsx","components/CountingSort.jsx","components/RadixSort.jsx","components/Sketch.jsx","App.js","index.js"],"names":["Topbar","setChoice","setAction","setImgChoice","setPartitionSize","useState","currChoiceId","setCurrentChoiceId","onButtonClick","newChoice","newId","document","getElementById","textContent","className","htmlFor","name","id","onChange","e","target","value","parseInt","onClick","href","Quicksort","arr","start","end","p","imgArr","wPixels","a","i","length","image","partition","index","pivotValue","pivotIndex","swap","b","sleep","temp","ms","Promise","resolve","setTimeout","j","minIdx","perv","curr","MergeSort","l","r","mid","arr1","filter","val","idx","arr2","left","right","n","Math","floor","heapify","largest","k","max","Array","fill","t","outputArr","maxNum","divisor","buckets","map","num","push","concat","apply","Sketch","choice","action","imgChoice","partitionSize","imgPath","setImgPath","useEffect","img","width","idxArr","from","keys","sketch","preload","loadImage","setup","resize","createCanvas","shuffle","draw","BubbleSort","SelectionSort","InsertionSort","HeapSort","CountingSort","RadixSort","noLoop","random","imaArr","newPixel","res","get","sketchCom","useRef","myp5","p5","current","remove","ref","App","ReactDOM","render","StrictMode"],"mappings":"qNACe,SAASA,EAAT,GAKX,IAJFC,EAIC,EAJDA,UACAC,EAGC,EAHDA,UACAC,EAEC,EAFDA,aACAC,EACC,EADDA,iBAEA,EAA2CC,mBAAS,IAApD,mBAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAgB,SAACC,EAAWC,GAC5BJ,GAAgBA,IAAiBI,IACnCC,SAASC,eAAeN,GAAcO,YAAcP,GAEtDL,EAAUQ,GACVF,EAAmBG,GACnBC,SAASC,eAAeF,GAAOG,YAAcJ,EAC7CP,EAAU,KAeZ,OACE,gCACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,cAAf,UACE,uBAAOC,QAAQ,MAAf,4BACA,yBAAQC,KAAK,MAAMC,GAAG,MAAMC,SAbT,SAACC,GAC1BhB,EAAagB,EAAEC,OAAOC,QAYhB,UACE,wBAAQA,MAAM,MAAd,yBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,OAAd,sBACA,wBAAQA,MAAM,KAAd,4BACA,wBAAQA,MAAM,KAAd,kCAIJ,sBAAKP,UAAU,kBAAf,UACE,uBAAOC,QAAQ,YAAf,4BACA,yBAAQC,KAAK,YAAYC,GAAG,YAAYC,SApBtB,SAACC,GACzBf,EAAiBkB,SAASH,EAAEC,OAAOC,SAmB7B,UACE,wBAAQA,MAAM,IAAd,wBACA,wBAAQA,MAAM,IAAd,yBACA,wBAAQA,MAAM,IAAd,8BAIJ,sBAAKP,UAAU,OAAf,UACE,qBACEA,UAAU,UACVG,GAAG,MACHM,QAAS,kBAAMf,EAAc,cAAe,QAH9C,iBAOA,qBACEM,UAAU,UACVG,GAAG,MACHM,QAAS,kBAAMf,EAAc,iBAAkB,QAHjD,iBAOA,qBACEM,UAAU,UACVG,GAAG,MACHM,QAAS,kBAAMf,EAAc,iBAAkB,QAHjD,iBAOA,qBACEM,UAAU,UACVG,GAAG,MACHM,QAAS,kBAAMf,EAAc,aAAc,QAH7C,iBAOA,qBACEM,UAAU,UACVG,GAAG,MACHM,QAAS,kBAAMf,EAAc,aAAc,QAH7C,iBAOA,qBACEM,UAAU,UACVG,GAAG,MACHM,QAAS,kBAAMf,EAAc,YAAa,QAH5C,iBAOA,qBACEM,UAAU,UACVG,GAAG,MACHM,QAAS,kBAAMf,EAAc,gBAAiB,QAHhD,iBAOA,qBACEM,UAAU,UACVG,GAAG,MACHM,QAAS,kBAAMf,EAAc,aAAc,QAH7C,oBAQF,qBAAKM,UAAU,YAAf,SACE,wBACEA,UAAU,MACVG,GAAG,OACHM,QAAS,WAhGjBrB,EAgGqC,SAH/B,oCASJ,sBAAKY,UAAU,SAAf,UACE,8CACA,mBACEU,KAAK,6FACLJ,OAAO,SAFT,yBAMA,uBACA,mBACEI,KAAK,8DACLJ,OAAO,SAFT,sBAMA,uBACA,mBAAGI,KAAK,6CAA6CJ,OAAO,SAA5D,4BAGA,uBACA,mBAAGI,KAAK,yCAAyCJ,OAAO,SAAxD,4BAGA,uBACA,gE,4CClJD,SAAeK,EAAtB,4C,4CAAO,WAAyBC,EAAKC,EAAOC,EAAKC,EAAGC,EAAQC,GAArD,iBAAAC,EAAA,sDACL,IAASC,EAAI,EAAGA,EAAIP,EAAIQ,OAAQD,IAC9BJ,EAAEM,MAAML,EAAOJ,EAAIO,IAAKA,EAAIF,EAAS,GAFlC,KAIDJ,GAASC,GAJR,iEAOaQ,EAAUV,EAAKC,EAAOC,GAPnC,OAODS,EAPC,OASLZ,EAAUC,EAAKC,EAAOU,EAAQ,EAAGR,EAAGC,EAAQC,GAC5CN,EAAUC,EAAKW,EAAQ,EAAGT,EAAKC,EAAGC,EAAQC,GAVrC,4C,+BAaQK,E,kFAAf,WAAyBV,EAAKC,EAAOC,GAArC,mBAAAI,EAAA,sDACMM,EAAaZ,EAAIE,GACjBW,EAAaZ,EACRM,EAAIN,EAHf,YAGsBM,EAAIL,GAH1B,sBAIQF,EAAIO,GAAKK,GAJjB,gCAKYE,EAAKd,EAAKO,EAAGM,GALzB,OAMMA,IANN,OAG+BN,IAH/B,wCASQO,EAAKd,EAAKa,EAAYX,GAT9B,iCAUSW,GAVT,6C,+BAaeC,E,kFAAf,WAAoBd,EAAKM,EAAGS,GAA5B,eAAAT,EAAA,sEACQU,EAAM,GADd,OAEMC,EAAOjB,EAAIM,GACfN,EAAIM,GAAKN,EAAIe,GACbf,EAAIe,GAAKE,EAJX,4C,sBAOA,SAASD,EAAME,GACb,OAAO,IAAIC,SAAQ,SAACC,GAAD,OAAaC,WAAWD,EAASF,M,4CClC/C,WAA0BlB,EAAKG,EAAGC,EAAQC,GAA1C,qBAAAC,EAAA,sDACIC,EAAI,EADR,YACWA,EAAIP,EAAIQ,QADnB,iBAEMc,EAAI,EAFV,YAEaA,EAAItB,EAAIQ,OAASD,EAAI,GAFlC,sBAGGP,EAAIsB,GAAKtB,EAAIsB,EAAI,IAHpB,iCAION,EAAM,MAJb,OAKKC,EAAOjB,EAAIsB,GACftB,EAAIsB,GAAKtB,EAAIsB,EAAI,GACjBtB,EAAIsB,EAAI,GAAKL,EAPd,QASD,IAASV,EAAI,EAAGA,EAAIP,EAAIQ,OAAQD,IAC9BJ,EAAEM,MAAML,EAAOJ,EAAIO,IAAKA,EAAIF,EAAS,GAVtC,QAEqCiB,IAFrC,uBAC2Bf,IAD3B,4D,sBAgBP,SAASS,EAAME,GACb,OAAO,IAAIC,SAAQ,SAACC,GAAD,OAAaC,WAAWD,EAASF,M,4CCjB/C,WAA6BlB,EAAKG,EAAGC,EAAQC,GAA7C,uBAAAC,EAAA,sDACIC,EAAI,EADR,YACWA,EAAIP,EAAIQ,QADnB,iBAEMc,EAAIf,EAAI,EAFd,YAEiBe,EAAItB,EAAIQ,QAFzB,wBAIGR,EADAuB,EAAShB,GACKP,EAAIsB,KACpBC,EAASD,GALV,SAOKN,EAAM,MAPX,OAYD,IAJIC,EAAOjB,EAAIuB,GACfvB,EAAIuB,GAAUvB,EAAIO,GAClBP,EAAIO,GAAKU,EAEAV,EAAI,EAAGA,EAAIP,EAAIQ,OAAQD,IAC9BJ,EAAEM,MAAML,EAAOJ,EAAIO,IAAKA,EAAIF,EAAS,GAbtC,QAEiCiB,IAFjC,uBAC2Bf,IAD3B,4D,sBAmBP,SAASS,EAAME,GACb,OAAO,IAAIC,SAAQ,SAACC,GAAD,OAAaC,WAAWD,EAASF,M,4CCpB/C,WAA6BlB,EAAKG,EAAGC,EAAQC,GAA7C,uBAAAC,EAAA,sDACIC,EAAI,EADR,YACWA,EAAIP,EAAIQ,QADnB,iBAIH,IAFIgB,EAAOjB,EAAI,EACXkB,EAAOlB,EACJiB,GAAQ,GAAKxB,EAAIyB,GAAQzB,EAAIwB,IAC9BP,EAAOjB,EAAIwB,GACfxB,EAAIwB,GAAQxB,EAAIyB,GAChBzB,EAAIyB,GAAQR,EACZO,IACAC,IATC,gBAWGT,EAAM,GAXT,OAYH,IAAST,EAAI,EAAGA,EAAIP,EAAIQ,OAAQD,IAC9BJ,EAAEM,MAAML,EAAOJ,EAAIO,IAAKA,EAAIF,EAAS,GAbpC,OAC2BE,IAD3B,4D,sBAkBP,SAASS,EAAME,GACb,OAAO,IAAIC,SAAQ,SAACC,GAAD,OAAaC,WAAWD,EAASF,MCnB/C,SAAeQ,EAAtB,4C,4CAAO,WAAyB1B,EAAK2B,EAAGC,EAAGzB,EAAGC,EAAQC,GAA/C,eAAAC,EAAA,2DACDqB,EAAIC,GADH,uBAECC,EAAMF,EAAI/B,UAAUgC,EAAID,GAAK,GAF9B,SAGGD,EAAU1B,EAAK2B,EAAGE,EAAK1B,EAAGC,EAAQC,GAHrC,uBAIGqB,EAAU1B,EAAK6B,EAAM,EAAGD,EAAGzB,EAAGC,EAAQC,GAJzC,uBAKGK,EAAUV,EAAK2B,EAAGE,EAAKD,EAAGzB,EAAGC,EAAQC,GALxC,4C,+BASQK,E,0FAAf,WAAyBV,EAAK2B,EAAGE,EAAKD,EAAGzB,EAAGC,EAAQC,GAApD,+BAAAC,EAAA,sDACMwB,EAAO9B,EAAI+B,QAAO,SAACC,EAAKC,GAC1B,OAAOA,GAAON,GAAKM,GAAOJ,KAGxBK,EAAOlC,EAAI+B,QAAO,SAACC,EAAKC,GAC1B,OAAOA,EAAMJ,GAAOI,GAAOL,KAGzBO,EAAO,EACTC,EAAQ,EAERX,EAAOE,EAZX,YAaSQ,EAAOL,EAAKtB,QAAU4B,EAAQF,EAAK1B,QAb5C,iCAcUQ,EAAM,GAdhB,OAsBI,IAPIc,EAAKK,IAASD,EAAKE,IACrBpC,EAAIyB,GAAQK,EAAKK,GACjBA,MAEAnC,EAAIyB,GAAQS,EAAKE,GACjBA,KAEO7B,EAAI,EAAGA,EAAIP,EAAIQ,OAAQD,IAC9BJ,EAAEM,MAAML,EAAOJ,EAAIO,IAAKA,EAAIF,EAAS,GAEvCoB,IAzBJ,4BA2BSU,EAAOL,EAAKtB,QA3BrB,kCA4BUQ,EAAM,GA5BhB,QAgCI,IAHAhB,EAAIyB,GAAQK,EAAKK,GACjBA,IACAV,IACSlB,EAAI,EAAGA,EAAIP,EAAIQ,OAAQD,IAC9BJ,EAAEM,MAAML,EAAOJ,EAAIO,IAAKA,EAAIF,EAAS,GAjC3C,6BAoCS+B,EAAQF,EAAK1B,QApCtB,kCAqCUQ,EAAM,GArChB,QAyCI,IAHAhB,EAAIyB,GAAQS,EAAKE,GACjBA,IACAX,IACSlB,EAAI,EAAGA,EAAIP,EAAIQ,OAAQD,IAC9BJ,EAAEM,MAAML,EAAOJ,EAAIO,IAAKA,EAAIF,EAAS,GA1C3C,wBA6CE,IAASE,EAAI,EAAGA,EAAIP,EAAIQ,OAAQD,IAC9BJ,EAAEM,MAAML,EAAOJ,EAAIO,IAAKA,EAAIF,EAAS,GA9CzC,6C,sBAkDA,SAASW,EAAME,GACb,OAAO,IAAIC,SAAQ,SAACC,GAAD,OAAaC,WAAWD,EAASF,M,4CC5D/C,WAAwBlB,EAAKG,EAAGC,EAAQC,GAAxC,qBAAAC,EAAA,sDACD+B,EAAIrC,EAAIQ,OAEHD,EAAI+B,KAAKC,MAAMF,EAAI,GAAK,EAH5B,YAG+B9B,GAAK,GAHpC,gCAIGiC,EAAQxC,EAAKqC,EAAG9B,EAAGJ,EAAGC,EAAQC,GAJjC,OAGuCE,IAHvC,sBAOIA,EAAI8B,EAAI,EAPZ,YAOe9B,GAAK,GAPpB,wBAQCU,EAAOjB,EAAIO,GACfP,EAAIO,GAAKP,EAAI,GACbA,EAAI,GAAKiB,EAVN,UAYGuB,EAAQxC,EAAKO,EAAG,EAAGJ,EAAGC,EAAQC,GAZjC,QAOuBE,IAPvB,4D,sBAgBP,IAAMiC,EAAO,uCAAG,WAAOxC,EAAKqC,EAAG9B,EAAGJ,EAAGC,EAAQC,GAA7B,uBAAAC,EAAA,sDACd,IAASC,EAAI,EAAGA,EAAIP,EAAIQ,OAAQD,IAC9BJ,EAAEM,MAAML,EAAOJ,EAAIO,IAAKA,EAAIF,EAAS,GAFzB,GAIVoC,EAAUlC,EAEV6B,EAAQ,EAAI7B,EAAI,GADhB4B,EAAO,EAAI5B,EAAI,GAGR8B,GAAKrC,EAAIyC,GAAWzC,EAAImC,KACjCM,EAAUN,GAGRC,EAAQC,GAAKrC,EAAIyC,GAAWzC,EAAIoC,KAClCK,EAAUL,GAGRK,GAAWlC,EAhBD,iCAiBNS,EAAM,MAjBA,cAkBRC,EAAOjB,EAAIyC,GACfzC,EAAIyC,GAAWzC,EAAIO,GACnBP,EAAIO,GAAKU,EApBG,UAsBNuB,EAAQxC,EAAKqC,EAAGI,EAAStC,EAAGC,EAAQC,GAtB9B,4CAAH,gEA0Bb,SAASW,EAAME,GACb,OAAO,IAAIC,SAAQ,SAACC,GAAD,OAAaC,WAAWD,EAASF,M,uDC3C/C,WAA4BlB,EAAKG,EAAGC,EAAQC,GAA5C,+BAAAC,EAAA,sDAML,IALI+B,EAAIrC,EAAIQ,OACRkC,EAAIJ,KAAKK,IAAL,MAAAL,KAAI,YAAQtC,IAEdiB,EAAO,IAAI2B,MAAMF,EAAI,GAAGG,KAAK,GAE1BtC,EAAI,EAAGA,EAAI8B,EAAG9B,IACrBuC,EAAI9C,EAAIO,GACRU,EAAK6B,KAGP,IAASvC,EAAI,EAAGA,GAAKmC,EAAGnC,IACtBU,EAAKV,GAAKU,EAAKV,GAAKU,EAAKV,EAAI,GAGzBwC,EAAY,IAAIH,MAAMP,GAAGQ,KAAK,GAE3BtC,EAAI8B,EAAI,EAjBZ,YAiBe9B,GAAK,GAjBpB,kCAkBGS,EAAM,MAlBT,QAuBH,IAJA8B,EAAI9C,EAAIO,GACRwC,EAAU9B,EAAK6B,GAAK,GAAKA,EACzB7B,EAAK6B,GAAK7B,EAAK6B,GAAK,EAEXvC,EAAI,EAAGA,EAAIP,EAAIQ,OAAQD,IAC9BJ,EAAEM,MAAML,EAAO2C,EAAUxC,IAAKA,EAAIF,EAAS,GAxB1C,QAiBuBE,IAjBvB,gDA4BEwC,GA5BF,6C,sBA+BP,SAAS/B,EAAME,GACb,OAAO,IAAIC,SAAQ,SAACC,GAAD,OAAaC,WAAWD,EAASF,M,wDChC/C,WAAyBlB,EAAKG,EAAGC,EAAQC,GAAzC,2BAAAC,EAAA,sDACC0C,EAA4B,GAAnBV,KAAKK,IAAL,MAAAL,KAAI,YAAQtC,IACvBiD,EAAU,GAFT,YAGEA,EAAUD,GAHZ,iCAIGhC,EAAM,KAJT,OAKCkC,EAAU,YAAIN,MAAM,KAAKO,KAAI,iBAAM,MALpC,cAManD,GANb,IAMH,2BAASoD,EAAY,QACnBF,EAAQZ,KAAKC,MAAOa,EAAMH,GAAYA,EAAU,MAAMI,KAAKD,GAP1D,8BAWH,IAFApD,EAAM,GAAGsD,OAAOC,MAAM,GAAIL,GAC1BD,GAAW,GACF1C,EAAI,EAAGA,EAAIP,EAAIQ,OAAQD,IAC9BJ,EAAEM,MAAML,EAAOJ,EAAIO,IAAKA,EAAIF,EAAS,GAZpC,gDAeEL,GAfF,6C,sBAkBP,SAASgB,EAAME,GACb,OAAO,IAAIC,SAAQ,SAACC,GAAD,OAAaC,WAAWD,EAASF,MCRvC,SAASsC,EAAT,GAA+D,IAA7CC,EAA4C,EAA5CA,OAAQC,EAAoC,EAApCA,OAAQC,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,cAC1D,EAA8BjF,mBAAS,IAAvC,mBAAOkF,EAAP,KAAgBC,EAAhB,KAEAC,qBAAU,WACR,OAAQJ,GACN,IAAK,WACHG,EAAW,gBACX,MACF,IAAK,OACHA,EAAW,oBACX,MACF,IAAK,KACHA,EAAW,0BACX,MACF,IAAK,KACHA,EAAW,0BACX,MACF,QACEA,EAAW,uBAGd,CAACH,IAEJ,IAKIK,EALAC,EAAQ,IAER5D,EAAUuD,EACVM,EAAStB,MAAMuB,KAAKvB,MAAMqB,EAAQ5D,GAAS+D,QAC3ChE,EAAS,GAGPiE,EAAS,SAAClE,GACdA,EAAEmE,QAAU,WACVN,EAAM7D,EAAEoE,UAAUV,IAGpB1D,EAAEqE,MAAQ,WACRR,EAAIS,OAAOR,EAZF,KAaT9D,EAAEuE,aAAaT,EAbN,KAcT7D,EAASM,EAAUsD,GACJ,SAAXN,GACFiB,EAAQT,IAIZ/D,EAAEyE,KAAO,WACP,IAAK,IAAIrE,EAAI,EAAGA,EAAI2D,EAAO1D,OAAQD,IACjCJ,EAAEM,MAAML,EAAO8D,EAAO3D,IAAKA,EAAIF,EAAS,GAG1C,GAAe,SAAXqD,EACF,OAAQD,GACN,IAAK,eP9DR,SAAP,iCO+DYoB,CAAWX,EAAQ/D,EAAGC,EAAQC,GAC9B,MACF,IAAK,kBNjER,SAAP,iCMkEYyE,CAAcZ,EAAQ/D,EAAGC,EAAQC,GACjC,MACF,IAAK,kBLpER,SAAP,iCKqEY0E,CAAcb,EAAQ/D,EAAGC,EAAQC,GACjC,MACF,IAAK,aACHqB,EAAUwC,EAAQ,EAAGA,EAAO1D,OAAS,EAAGL,EAAGC,EAAQC,GACnD,MACF,IAAK,aACHN,EAAUmE,EAAQ,EAAGA,EAAO1D,OAAS,EAAGL,EAAGC,EAAQC,GACnD,MACF,IAAK,aH7ER,SAAP,iCG8EY2E,CAASd,EAAQ/D,EAAGC,EAAQC,GAC5B,MACF,IAAK,iBFhFR,SAAP,iCEiFY4E,CAAaf,EAAQ/D,EAAGC,EAAQC,GAChC,MACF,IAAK,cDnFR,SAAP,iCCoFY6E,CAAUhB,EAAQ/D,EAAGC,EAAQC,QAIjCF,EAAEgF,SAEJhF,EAAEgF,UAGJ,IAAMR,EAAU,SAAC3E,GAIf,IAHA,IACIiB,EACAgB,EAFAI,EAAIrC,EAAIQ,OAGL6B,GACLJ,EAAOK,KAAK8C,SAAW/C,IAAO,EAC9BpB,EAAOjB,EAAIqC,GACXrC,EAAIqC,GAAKrC,EAAIiC,GACbjC,EAAIiC,GAAOhB,EAEb,OAAOjB,GAGHU,EAAY,SAAC2E,GAGjB,IAFA,IACIC,EADAC,EAAM,GAEDhF,EAAI,EAAGA,EAAI0D,EAAQ5D,EAASE,IACnC+E,EAAWD,EAAOG,IAAIjF,EAAIF,EAAS,EAAGA,EA3E/B,KA4EPkF,EAAIlC,KAAKiC,GAEX,OAAOC,IAILE,EAAYC,mBASlB,OAPA3B,qBAAU,WACR,IAAI4B,EAAO,IAAIC,IAAGvB,EAAQoB,EAAUI,SACpC,OAAO,WACLF,EAAKG,aAIF,qBAAK1G,UAAU,SAAS2G,IAAKN,IClGvBO,MAvBf,WACE,MAA4BrH,mBAAS,IAArC,mBAAO8E,EAAP,KAAelF,EAAf,KACA,EAA4BI,mBAAS,IAArC,mBAAO+E,EAAP,KAAelF,EAAf,KACA,EAAkCG,mBAAS,OAA3C,mBAAOgF,EAAP,KAAkBlF,EAAlB,KACA,EAA0CE,mBAAS,GAAnD,mBAAOiF,EAAP,KAAsBlF,EAAtB,KACA,OACE,sBAAKU,UAAU,MAAf,UACE,cAACd,EAAD,CACEC,UAAWA,EACXC,UAAWA,EACXC,aAAcA,EACdC,iBAAkBA,IAEpB,cAAC8E,EAAD,CACEC,OAAQA,EACRC,OAAQA,EACRC,UAAWA,EACXC,cAAeA,QClBvBqC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlH,SAASC,eAAe,W","file":"static/js/main.49e9f753.chunk.js","sourcesContent":["import { useState } from 'react';\nexport default function Topbar({\n  setChoice,\n  setAction,\n  setImgChoice,\n  setPartitionSize,\n}) {\n  const [currChoiceId, setCurrentChoiceId] = useState('');\n\n  const onButtonClick = (newChoice, newId) => {\n    if (currChoiceId && currChoiceId !== newId) {\n      document.getElementById(currChoiceId).textContent = currChoiceId;\n    }\n    setChoice(newChoice);\n    setCurrentChoiceId(newId);\n    document.getElementById(newId).textContent = newChoice;\n    setAction('');\n  };\n\n  const onClickAction = (action) => {\n    setAction(action);\n  };\n\n  const onChangeImgHandler = (e) => {\n    setImgChoice(e.target.value);\n  };\n\n  const onChangePartition = (e) => {\n    setPartitionSize(parseInt(e.target.value));\n  };\n\n  return (\n    <div>\n      <div className=\"topBarContainer\">\n        <div className=\"imageChoice\">\n          <label htmlFor=\"img\">Choose a Image</label>\n          <select name=\"img\" id=\"img\" onChange={onChangeImgHandler}>\n            <option value=\"Cal\">Cal Pennant</option>\n            <option value=\"Diagonal\">Diagonal</option>\n            <option value=\"Bear\">Cal Bear</option>\n            <option value=\"RM\">Rick and Morty</option>\n            <option value=\"NN\">Neural Network</option>\n          </select>\n        </div>\n\n        <div className=\"partitionChoice\">\n          <label htmlFor=\"partition\">Partition Size</label>\n          <select name=\"partition\" id=\"partition\" onChange={onChangePartition}>\n            <option value=\"8\">Small Size</option>\n            <option value=\"4\">Medium Size</option>\n            <option value=\"2\">Large Size</option>\n          </select>\n        </div>\n\n        <div className=\"algo\">\n          <div\n            className=\"algoBtn\"\n            id=\"BUB\"\n            onClick={() => onButtonClick('BUBBLE SORT', 'BUB')}\n          >\n            BUB\n          </div>\n          <div\n            className=\"algoBtn\"\n            id=\"SEL\"\n            onClick={() => onButtonClick('SELECTION SORT', 'SEL')}\n          >\n            SEL\n          </div>\n          <div\n            className=\"algoBtn\"\n            id=\"INS\"\n            onClick={() => onButtonClick('INSERTION SORT', 'INS')}\n          >\n            INS\n          </div>\n          <div\n            className=\"algoBtn\"\n            id=\"MER\"\n            onClick={() => onButtonClick('MERGE SORT', 'MER')}\n          >\n            MER\n          </div>\n          <div\n            className=\"algoBtn\"\n            id=\"QUI\"\n            onClick={() => onButtonClick('QUICK SORT', 'QUI')}\n          >\n            QUI\n          </div>\n          <div\n            className=\"algoBtn\"\n            id=\"HEP\"\n            onClick={() => onButtonClick('HEAP SORT', 'HEP')}\n          >\n            HEP\n          </div>\n          <div\n            className=\"algoBtn\"\n            id=\"COU\"\n            onClick={() => onButtonClick('COUNTING SORT', 'COU')}\n          >\n            COU\n          </div>\n          <div\n            className=\"algoBtn\"\n            id=\"RAD\"\n            onClick={() => onButtonClick('RADIX SORT', 'RAD')}\n          >\n            RAD\n          </div>\n        </div>\n        <div className=\"actionBtn\">\n          <button\n            className=\"btn\"\n            id=\"sort\"\n            onClick={() => onClickAction('SORT')}\n          >\n            Shuffle and Sort!\n          </button>\n        </div>\n      </div>\n      <div className=\"source\">\n        <p>Image Source:</p>\n        <a\n          href=\"https://www.pngkit.com/view/u2q8y3o0t4t4a9e6_uc-berkeley-pennant-uc-berkeley-pennant-2017/\"\n          target=\"_blank\"\n        >\n          Cal Pennant\n        </a>\n        <br />\n        <a\n          href=\"http://clipart-library.com/clipart/berkeley-cliparts_10.htm\"\n          target=\"_blank\"\n        >\n          Cal Bear\n        </a>\n        <br />\n        <a href=\"https://pngio.com/images/png-a2165098.html\" target=\"_blank\">\n          Rick And Morty\n        </a>\n        <br />\n        <a href=\"http://alexlenail.me/NN-SVG/index.html\" target=\"_blank\">\n          Neural Network\n        </a>\n        <br />\n        <p>Diagonal Line: I drew it.</p>\n      </div>\n    </div>\n  );\n}\n","export async function Quicksort(arr, start, end, p, imgArr, wPixels) {\n  for (let i = 0; i < arr.length; i++) {\n    p.image(imgArr[arr[i]], i * wPixels, 0);\n  }\n  if (start >= end) {\n    return;\n  }\n  let index = await partition(arr, start, end);\n\n  Quicksort(arr, start, index - 1, p, imgArr, wPixels);\n  Quicksort(arr, index + 1, end, p, imgArr, wPixels);\n}\n\nasync function partition(arr, start, end) {\n  let pivotValue = arr[end];\n  let pivotIndex = start;\n  for (let i = start; i < end; i++) {\n    if (arr[i] < pivotValue) {\n      await swap(arr, i, pivotIndex);\n      pivotIndex++;\n    }\n  }\n  await swap(arr, pivotIndex, end);\n  return pivotIndex;\n}\n\nasync function swap(arr, a, b) {\n  await sleep(1);\n  let temp = arr[a];\n  arr[a] = arr[b];\n  arr[b] = temp;\n}\n\nfunction sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n","export async function BubbleSort(arr, p, imgArr, wPixels) {\n  for (let i = 0; i < arr.length; i++) {\n    for (let j = 0; j < arr.length - i - 1; j++) {\n      if (arr[j] > arr[j + 1]) {\n        await sleep(0.001);\n        let temp = arr[j];\n        arr[j] = arr[j + 1];\n        arr[j + 1] = temp;\n      }\n      for (let i = 0; i < arr.length; i++) {\n        p.image(imgArr[arr[i]], i * wPixels, 0);\n      }\n    }\n  }\n}\n\nfunction sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n","export async function SelectionSort(arr, p, imgArr, wPixels) {\n  for (let i = 0; i < arr.length; i++) {\n    for (let j = i + 1; j < arr.length; j++) {\n      let minIdx = i;\n      if (arr[minIdx] > arr[j]) {\n        minIdx = j;\n      }\n      await sleep(0.001);\n      let temp = arr[minIdx];\n      arr[minIdx] = arr[i];\n      arr[i] = temp;\n\n      for (let i = 0; i < arr.length; i++) {\n        p.image(imgArr[arr[i]], i * wPixels, 0);\n      }\n    }\n  }\n}\n\nfunction sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n","export async function InsertionSort(arr, p, imgArr, wPixels) {\n  for (let i = 0; i < arr.length; i++) {\n    let perv = i - 1;\n    let curr = i;\n    while (perv >= 0 && arr[curr] < arr[perv]) {\n      let temp = arr[perv];\n      arr[perv] = arr[curr];\n      arr[curr] = temp;\n      perv--;\n      curr--;\n    }\n    await sleep(1);\n    for (let i = 0; i < arr.length; i++) {\n      p.image(imgArr[arr[i]], i * wPixels, 0);\n    }\n  }\n}\n\nfunction sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n","export async function MergeSort(arr, l, r, p, imgArr, wPixels) {\n  if (l < r) {\n    let mid = l + parseInt((r - l) / 2);\n    await MergeSort(arr, l, mid, p, imgArr, wPixels);\n    await MergeSort(arr, mid + 1, r, p, imgArr, wPixels);\n    await partition(arr, l, mid, r, p, imgArr, wPixels);\n  }\n}\n\nasync function partition(arr, l, mid, r, p, imgArr, wPixels) {\n  let arr1 = arr.filter((val, idx) => {\n    return idx >= l && idx <= mid;\n  });\n\n  let arr2 = arr.filter((val, idx) => {\n    return idx > mid && idx <= r;\n  });\n\n  let left = 0,\n    right = 0,\n    // curr starts from l\n    curr = l;\n  while (left < arr1.length && right < arr2.length) {\n    await sleep(1);\n    if (arr1[left] <= arr2[right]) {\n      arr[curr] = arr1[left];\n      left++;\n    } else {\n      arr[curr] = arr2[right];\n      right++;\n    }\n    for (let i = 0; i < arr.length; i++) {\n      p.image(imgArr[arr[i]], i * wPixels, 0);\n    }\n    curr++;\n  }\n  while (left < arr1.length) {\n    await sleep(1);\n    arr[curr] = arr1[left];\n    left++;\n    curr++;\n    for (let i = 0; i < arr.length; i++) {\n      p.image(imgArr[arr[i]], i * wPixels, 0);\n    }\n  }\n  while (right < arr2.length) {\n    await sleep(1);\n    arr[curr] = arr2[right];\n    right++;\n    curr++;\n    for (let i = 0; i < arr.length; i++) {\n      p.image(imgArr[arr[i]], i * wPixels, 0);\n    }\n  }\n  for (let i = 0; i < arr.length; i++) {\n    p.image(imgArr[arr[i]], i * wPixels, 0);\n  }\n}\n\nfunction sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n","export async function HeapSort(arr, p, imgArr, wPixels) {\n  let n = arr.length;\n\n  for (let i = Math.floor(n / 2) - 1; i >= 0; i--) {\n    await heapify(arr, n, i, p, imgArr, wPixels);\n  }\n\n  for (let i = n - 1; i >= 0; i--) {\n    let temp = arr[i];\n    arr[i] = arr[0];\n    arr[0] = temp;\n\n    await heapify(arr, i, 0, p, imgArr, wPixels);\n  }\n}\n\nconst heapify = async (arr, n, i, p, imgArr, wPixels) => {\n  for (let i = 0; i < arr.length; i++) {\n    p.image(imgArr[arr[i]], i * wPixels, 0);\n  }\n  let largest = i;\n  let left = 2 * i + 1;\n  let right = 2 * i + 2;\n\n  if (left < n && arr[largest] < arr[left]) {\n    largest = left;\n  }\n\n  if (right < n && arr[largest] < arr[right]) {\n    largest = right;\n  }\n\n  if (largest != i) {\n    await sleep(0.001);\n    let temp = arr[largest];\n    arr[largest] = arr[i];\n    arr[i] = temp;\n\n    await heapify(arr, n, largest, p, imgArr, wPixels);\n  }\n};\n\nfunction sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n","export async function CountingSort(arr, p, imgArr, wPixels) {\n  let n = arr.length;\n  let k = Math.max(...arr);\n  let t;\n  const temp = new Array(k + 1).fill(0);\n\n  for (let i = 0; i < n; i++) {\n    t = arr[i];\n    temp[t]++;\n  }\n\n  for (let i = 1; i <= k; i++) {\n    temp[i] = temp[i] + temp[i - 1];\n  }\n\n  const outputArr = new Array(n).fill(0);\n\n  for (let i = n - 1; i >= 0; i--) {\n    await sleep(0.001);\n    t = arr[i];\n    outputArr[temp[t] - 1] = t;\n    temp[t] = temp[t] - 1;\n\n    for (let i = 0; i < arr.length; i++) {\n      p.image(imgArr[outputArr[i]], i * wPixels, 0);\n    }\n  }\n\n  return outputArr;\n}\n\nfunction sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n","export async function RadixSort(arr, p, imgArr, wPixels) {\n  const maxNum = Math.max(...arr) * 10;\n  let divisor = 10;\n  while (divisor < maxNum) {\n    await sleep(100);\n    let buckets = [...Array(10)].map(() => []);\n    for (let num of arr) {\n      buckets[Math.floor((num % divisor) / (divisor / 10))].push(num);\n    }\n    arr = [].concat.apply([], buckets);\n    divisor *= 10;\n    for (let i = 0; i < arr.length; i++) {\n      p.image(imgArr[arr[i]], i * wPixels, 0);\n    }\n  }\n  return arr;\n}\n\nfunction sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n","import p5 from 'p5';\nimport { useState, useEffect, useRef } from 'react';\nimport { Quicksort } from './Quicksort';\nimport { BubbleSort } from './BubbleSort';\nimport { SelectionSort } from './SelectionSort';\nimport { InsertionSort } from './InsertionSort';\nimport { MergeSort } from './MergeSort';\nimport { HeapSort } from './HeapSort';\nimport { CountingSort } from './CountingSort';\nimport { RadixSort } from './RadixSort';\n\nexport default function Sketch({ choice, action, imgChoice, partitionSize }) {\n  const [imgPath, setImgPath] = useState('');\n\n  useEffect(() => {\n    switch (imgChoice) {\n      case 'Diagonal':\n        setImgPath('img/diag.png');\n        break;\n      case 'Bear':\n        setImgPath('img/Cal Bear.jpg');\n        break;\n      case 'RM':\n        setImgPath('img/Rick and Morty.jpg');\n        break;\n      case 'NN':\n        setImgPath('img/nerual network.JPG');\n        break;\n      default:\n        setImgPath('img/berkeley.JPG');\n        break;\n    }\n  }, [imgChoice]);\n\n  let width = 800;\n  let height = 500;\n  let wPixels = partitionSize;\n  let idxArr = Array.from(Array(width / wPixels).keys());\n  let imgArr = [];\n  let img;\n\n  const sketch = (p) => {\n    p.preload = () => {\n      img = p.loadImage(imgPath);\n    };\n\n    p.setup = () => {\n      img.resize(width, height);\n      p.createCanvas(width, height);\n      imgArr = partition(img);\n      if (action === 'SORT') {\n        shuffle(idxArr);\n      }\n    };\n\n    p.draw = () => {\n      for (let i = 0; i < idxArr.length; i++) {\n        p.image(imgArr[idxArr[i]], i * wPixels, 0);\n      }\n\n      if (action === 'SORT') {\n        switch (choice) {\n          case 'BUBBLE SORT':\n            BubbleSort(idxArr, p, imgArr, wPixels);\n            break;\n          case 'SELECTION SORT':\n            SelectionSort(idxArr, p, imgArr, wPixels);\n            break;\n          case 'INSERTION SORT':\n            InsertionSort(idxArr, p, imgArr, wPixels);\n            break;\n          case 'MERGE SORT':\n            MergeSort(idxArr, 0, idxArr.length - 1, p, imgArr, wPixels);\n            break;\n          case 'QUICK SORT':\n            Quicksort(idxArr, 0, idxArr.length - 1, p, imgArr, wPixels);\n            break;\n          case 'HEAP SORT':\n            HeapSort(idxArr, p, imgArr, wPixels);\n            break;\n          case 'COUNTING SORT':\n            CountingSort(idxArr, p, imgArr, wPixels);\n            break;\n          case 'RADIX SORT':\n            RadixSort(idxArr, p, imgArr, wPixels);\n            break;\n        }\n      } else {\n        p.noLoop();\n      }\n      p.noLoop();\n    };\n\n    const shuffle = (arr) => {\n      let n = arr.length;\n      let temp;\n      let idx;\n      while (n) {\n        idx = (Math.random() * n--) | 0; // 0 ≤ i < n\n        temp = arr[n];\n        arr[n] = arr[idx];\n        arr[idx] = temp;\n      }\n      return arr;\n    };\n\n    const partition = (imaArr) => {\n      let res = [];\n      let newPixel;\n      for (let i = 0; i < width / wPixels; i++) {\n        newPixel = imaArr.get(i * wPixels, 0, wPixels, height);\n        res.push(newPixel);\n      }\n      return res;\n    };\n  };\n\n  const sketchCom = useRef();\n\n  useEffect(() => {\n    let myp5 = new p5(sketch, sketchCom.current);\n    return () => {\n      myp5.remove();\n    };\n  });\n\n  return <div className=\"sketch\" ref={sketchCom} />;\n}\n","import './App.css';\nimport Topbar from './components/Topbar';\nimport Sketch from './components/Sketch';\nimport { useState } from 'react';\n\nfunction App() {\n  const [choice, setChoice] = useState('');\n  const [action, setAction] = useState('');\n  const [imgChoice, setImgChoice] = useState('Cal');\n  const [partitionSize, setPartitionSize] = useState(8);\n  return (\n    <div className=\"App\">\n      <Topbar\n        setChoice={setChoice}\n        setAction={setAction}\n        setImgChoice={setImgChoice}\n        setPartitionSize={setPartitionSize}\n      />\n      <Sketch\n        choice={choice}\n        action={action}\n        imgChoice={imgChoice}\n        partitionSize={partitionSize}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}